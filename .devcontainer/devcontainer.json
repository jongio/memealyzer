{
	"name": "Memealyzer",
	"build": {
		"dockerfile": "Dockerfile"
	},
	"settings": {
		"go.useGoProxyToCheckForToolUpdates": false,
		"go.useLanguageServer": true,
		"go.gopath": "/go",
		"go.goroot": "/usr/local/go",
		"go.toolsGopath": "/go/bin",
		"python.pythonPath": "/opt/python/latest/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
		"lldb.executable": "/usr/bin/lldb",
		"files.watcherExclude": {
			"**/target/**": true
		}
	},
	"remoteUser": "codespace",
	"overrideCommand": false,
	"workspaceMount": "source=${localWorkspaceFolder},target=/home/codespace/workspace,type=bind,consistency=cached",
	"workspaceFolder": "/home/codespace/workspace",
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"
	],
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--net", "host", 
        "-e", "DISPLAY=host.docker.internal:0",
        "-v", "/tmp/.X11-unix:/tmp/.X11-unix"
	],
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"GitHub.vscode-pull-request-github",
		"ms-azuretools.vscode-azurefunctions",
		"ms-azuretools.vscode-bicep",
		"ms-playwright.playwright",
		"ms-dotnettools.csharp",
		"esbenp.prettier-vscode"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [1080, 2080, 3080],
	// "oryx build" will automatically install your dependencies and attempt to build your project
	// "postCreateCommand": "sudo chmod a+x /root"
}